{"version":3,"file":"static/js/881.0ef33a12.chunk.js","mappings":"gLACA,EAAuB,yBAAvB,EAA8D,gCAA9D,EAA0G,8BAA1G,EAAmJ,6B,mBCUnJ,EARmB,SAACA,GAEhB,OACI,gBAAKC,UAAS,0BAAqBD,EAAME,MAGjD,ECYA,EAhBmB,SAACF,GAChB,OACI,iBAAKC,UAAWE,EAAkB,WAE9B,SAAC,EAAU,CAACD,IAAKF,EAAME,OAEvB,gBAAKD,UAAWE,EAAiB,UAC7B,SAAC,KAAO,CAACC,GAAI,YAAcJ,EAAMK,GAAIJ,UAAWE,EAAa,UACzD,gBAAKF,UAAWE,EAAoB,SAAEH,EAAMM,aAMhE,ECLA,EAXgB,SAACN,GAIb,OACI,gBAAKC,UAAS,kBAAaD,EAAMO,OAAS,IAAM,EAAI,UAAY,SAAU,SACrEP,EAAMQ,SAGnB,E,UCXA,EAA6B,4BAA7B,EAAuE,6BAAvE,EAAiH,4BAAjH,EAA6J,+BCA7J,EAA4B,gCAA5B,EAA8E,sCAA9E,EAA0H,0BAA1H,EAA8J,8BAA9J,EAAoM,4BAApM,EAA6O,iC,oBCmD7O,EA9CqB,SAACR,GAMlB,OACI,SAAC,KAAI,CACDS,SANY,SAACC,GACjBV,EAAMW,WAAWD,EAAOE,eAC5B,EAIgC,SAEvB,gBAAGC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAAU,OACxB,iBACIL,SAAUI,EAAa,UAGvB,gBAAKZ,UAAWE,EAAwB,UACpC,iBAAKF,UAAWE,EAAkB,WAE9B,SAAC,KAAK,CACFG,KAAK,iBACLS,SAAUC,EAAAA,GACVC,UAAW,WACXhB,UAAWE,KAGf,kBAAOe,QAAQ,OAAOjB,UAAWE,EAAgB,UAC7C,gBAAKF,UAAWE,OAEpB,mBACIF,UAAWE,EACXE,GAAI,OACJc,KAAM,SACNC,SAAUN,EAAW,SACxB,iBAKN,GAMvB,ECtBA,EAvBgB,SAACd,GAEb,OACI,iBAAKC,UAAWE,EAAmB,WAC/B,gBAAKF,UAAWE,EAAoB,SAE/BH,EAAMqB,mBAGX,iBAAKpB,UAAWE,EAAmB,WAE/B,gBAAKF,UAAWE,EAAsB,SACjCH,EAAMsB,oBAGX,SAAC,EAAY,CAACX,WAAYX,EAAMW,kBAMhD,E,oBCLA,GAAeY,E,QAAAA,KACXC,EAAAA,EAAAA,KAXkB,SAACC,GACnB,MAAO,CACHC,aAAeD,EAAMC,aACrBL,gBAAkBI,EAAMC,aAAaC,YAAYC,KAAI,SAAAC,GAAE,OAAK,SAAC,EAAU,CAACvB,KAAMuB,EAAGvB,KAAMJ,IAAK2B,EAAG3B,KAAU2B,EAAGxB,GAAK,IACjHiB,iBAAmBG,EAAMC,aAAaI,aAAaF,KAAI,SAAAC,GAAE,OAAK,SAAC,EAAO,CAACrB,QAASqB,EAAGrB,QAASD,OAAQsB,EAAGxB,IAASwB,EAAGxB,GAAK,IAEhI,GAK6B,CAACM,WAAAA,EAAAA,IAC1BoB,EAAAA,EAFJ,CAGOC,E","sources":["webpack://proj_social_web/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/UserAvatar/UserAvatar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","webpack://proj_social_web/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://proj_social_web/./src/components/Dialogs/PrintMessage/PrintMessage.module.css?e65d","components/Dialogs/PrintMessage/PrintMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user\":\"DialogItem_user__pO4Sf\",\"contactItem\":\"DialogItem_contactItem__nBvpp\",\"leftPanel\":\"DialogItem_leftPanel__-KqKB\",\"userName\":\"DialogItem_userName__H-k75\"};","import React from 'react'\r\nimport './UserAvatar.css'\r\n\r\nconst UserAvatar = (props) => {\r\n    \r\n    return (\r\n        <div className={`userAvatar photo${props.ava}`}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAvatar","import React from 'react'\r\nimport classes from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport UserAvatar from './UserAvatar/UserAvatar'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.leftPanel}>\r\n            \r\n            <UserAvatar ava={props.ava}/>\r\n\r\n            <div className={classes.userName}>\r\n                <NavLink to={'/dialogs/' + props.id} className={classes.user}>\r\n                    <div className={classes.contactItem}>{props.name}</div>\r\n                </NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport './Message.css'\r\n\r\nconst Message = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className={`message ${props.number % 2 !== 0 ? 'message' : 'right'}`}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialogPage\":\"Dialogs_dialogPage__hMP1c\",\"dialogItems\":\"Dialogs_dialogItems__+lshm\",\"rightPanel\":\"Dialogs_rightPanel__4HiQS\",\"messagesPanel\":\"Dialogs_messagesPanel__eC+WH\"};","// extracted by mini-css-extract-plugin\nexport default {\"printArea\":\"PrintMessage_printArea__q79hF\",\"printAreaBorder\":\"PrintMessage_printAreaBorder__Q7yDv\",\"btn\":\"PrintMessage_btn__Jw8zu\",\"postBtn\":\"PrintMessage_postBtn__iUXJ6\",\"Arrow\":\"PrintMessage_Arrow__yUU+q\",\"newMessage\":\"PrintMessage_newMessage__jO0P2\"};","import React from 'react';\r\nimport classes from './PrintMessage.module.css'\r\nimport { Form, Field } from 'react-final-form'\r\n// import { TextArea } from '../../Common/FormControls/FormsControls';\r\nimport {requiredField} from './../../../utilities/validators/validators'\r\n\r\nconst PrintMessage = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={addNewMessage}\r\n        >\r\n            {({ handleSubmit, submitting }) => (\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n\r\n                >\r\n                    <div className={classes.printAreaBorder}>\r\n                        <div className={classes.printArea}>\r\n                            \r\n                            <Field\r\n                                name=\"newMessageBody\"\r\n                                validate={requiredField}\r\n                                component={'textarea'}\r\n                                className={classes.newMessage}\r\n                            >\r\n                            </Field>\r\n                            <label htmlFor='post' className={classes.postBtn}>\r\n                                <div className={classes.Arrow}></div>\r\n                            </label>\r\n                            <button\r\n                                className={classes.btn}\r\n                                id={\"post\"}\r\n                                type={\"submit\"}\r\n                                disabled={submitting}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>)\r\n            }\r\n        </Form>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PrintMessage;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport PrintMessage from './PrintMessage/PrintMessage';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialogPage}>\r\n            <div className={classes.dialogItems}>\r\n\r\n                {props.dialogsElements}\r\n                \r\n            </div>\r\n            <div className={classes.rightPanel}>\r\n                \r\n                <div className={classes.messagesPanel}>\r\n                    {props.messagesElements}\r\n                </div>\r\n\r\n                <PrintMessage addMessage={props.addMessage} />\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {connect} from 'react-redux'\r\nimport Dialogs from './Dialogs';\r\nimport { addMessage} from './../../redux/dialogsReducer'\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage : state.messagesPage,\r\n        dialogsElements : state.messagesPage.dialogsData.map(el => (<DialogItem name={el.name} ava={el.ava} key={el.id}/>)),\r\n        messagesElements : state.messagesPage.messagesData.map(el => (<Message message={el.message} number={el.id} key={el.id}/>)),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n    ) (Dialogs);"],"names":["props","className","ava","classes","to","id","name","number","message","onSubmit","values","addMessage","newMessageBody","handleSubmit","submitting","validate","requiredField","component","htmlFor","type","disabled","dialogsElements","messagesElements","compose","connect","state","messagesPage","dialogsData","map","el","messagesData","withAuthRedirect","Dialogs"],"sourceRoot":""}